{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\georg\\\\Desktop\\\\Touken\\\\touken\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tasks({\n  title\n}) {\n  _s();\n  //sets button state so button will swap if marked as complete\n  const [complete, setStatus] = useState(false);\n  function getStatus() {\n    setStatus(true);\n  }\n  const taskStatus = `button ${complete ? 'task-complete' : ''}`;\n  return (\n    /*#__PURE__*/\n    // creates a task card for each task that exists in task list\n    _jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"task-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"10 coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: taskStatus,\n        onClick: getStatus,\n        children: complete ? 'Task Complete' : 'Mark as Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Tasks, \"3tp1EitHClmOBajoTa1/ZAEZse0=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Tasks","title","_s","complete","setStatus","getStatus","taskStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/georg/Desktop/Touken/touken/src/components/Tasks.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Tasks({title}) {\r\n\r\n    //sets button state so button will swap if marked as complete\r\n    const [complete, setStatus] = useState(false);\r\n\r\n    function getStatus() {\r\n        setStatus(true);\r\n    }\r\n\r\n    const taskStatus = `button ${complete ? 'task-complete' : ''}`;\r\n\r\n\r\n    return (\r\n    // creates a task card for each task that exists in task list\r\n    <div className=\"task\">\r\n                    <h3 className=\"task-title\">{title}</h3>\r\n                    <h1>10 coins</h1>\r\n                    <a className={taskStatus} onClick={getStatus}>\r\n                        {complete ? 'Task Complete' : 'Mark as Complete'}\r\n                    </a>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,KAAKA,CAAC;EAACC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAEnC;EACA,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7C,SAASQ,SAASA,CAAA,EAAG;IACjBD,SAAS,CAAC,IAAI,CAAC;EACnB;EAEA,MAAME,UAAU,GAAI,UAASH,QAAQ,GAAG,eAAe,GAAG,EAAG,EAAC;EAG9D;IAAA;IACA;IACAJ,OAAA;MAAKQ,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACLT,OAAA;QAAIQ,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvCb,OAAA;QAAAS,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBb,OAAA;QAAGQ,SAAS,EAAED,UAAW;QAACO,OAAO,EAAER,SAAU;QAAAG,QAAA,EACxCL,QAAQ,GAAG,eAAe,GAAG;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;AAEV;AAACV,EAAA,CAtBuBF,KAAK;AAAAc,EAAA,GAALd,KAAK;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}